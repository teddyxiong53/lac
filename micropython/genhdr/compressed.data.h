#define MP_MAX_UNCOMPRESSED_TEXT_LEN (68)
MP_COMPRESSED_DATA("argumen\364functio\356objec\364can'\364no\364mus\364supporte\344assignmen\364ar\347keywor\344generato\362outsid\345positiona\354o\346nam\345b\345multipl\345nonloca\354require\344wron\347doesn'\364fo\362invali\344missin\347suppor\364t\357typ\345issubclass(\251afte\362empt\371foun\344i\356n\357rang\345allocatio\356expressio\356identifie\362tuple/lis\364unexpecte\344\341argument\363redefine\344wit\350instanc\345negativ\345overflo\367sequenc\345conver\364defaul\364expect\363failed\254ha\363indice\363in\364ou\364impor\364inden\364lengt\350memor\371numbe\362synta\370value\363a\356asyn\343byte\363clas\363inde\370isn'\364oute\362tupl\345valu\345'%q\247fro\355ite\355lis\364lon\347sel\346zer\357\262ba\344to\357*\252*\370a\363i\363o\362\261#%\344%\361%\365'await\247'break'/'continue\247'except\247'yield\247\252\2633-ar\3473\266<\275>\275BaseExceptio\356GeneratorExi\364LH\323Non\345StopIteratio\356__init__(\251abort(\251acceptabl\345activ\345allocatin\347alread\371an\344an\371arg\363assig\356attribut\345attribute\363bas\345base\363befor\345bindin\347buffe\362buil\344b\371bytecod\345callabl\345calle\344characte\362")
MP_MATCH_COMPRESSED("'await' outside function", "\377\332\213\201")
MP_MATCH_COMPRESSED("'break'/'continue' outside loop", "\377\333\213loop")
MP_MATCH_COMPRESSED("'yield' outside function", "\377\335\213\201")
MP_MATCH_COMPRESSED("* arg after **", "\377\336\210\234\321")
MP_MATCH_COMPRESSED("*x must be assignment target", "\377\322\205\217\207target")
MP_MATCH_COMPRESSED("3-arg pow() not supported", "\377\340pow()\204\206")
MP_MATCH_COMPRESSED("LHS of keyword arg must be an id", "\377\346\215\211\210\205\217\276id")
MP_MATCH_COMPRESSED("__init__() should return None", "\377\351should return\347")
MP_MATCH_COMPRESSED("abort() called", "\377\352\376")
MP_MATCH_COMPRESSED("argument name reused", "\377\200\216reused")
MP_MATCH_COMPRESSED("argument num/types mismatch", "\377\200num/types mismatch")
MP_MATCH_COMPRESSED("async for/with outside async function", "\377\277for/with\213\277\201")
MP_MATCH_COMPRESSED("attributes not supported yet", "\377\364\204\206yet")
MP_MATCH_COMPRESSED("bad format string", "\377\317format string")
MP_MATCH_COMPRESSED("bad typecode", "\377\317typecode")
MP_MATCH_COMPRESSED("bytecode overflow", "\377\374\255")
MP_MATCH_COMPRESSED("bytes value out of range", "\377\300\306\266\215\241")
MP_MATCH_COMPRESSED("can't assign to expression", "\377\203\362\231\243")
MP_MATCH_COMPRESSED("can't convert to int", "\377\203\257\231\265")
MP_MATCH_COMPRESSED("can't convert to str implicitly", "\377\203\257\231str implicitly")
MP_MATCH_COMPRESSED("can't create instance", "\377\203create\253")
MP_MATCH_COMPRESSED("can't declare nonlocal in outer code", "\377\203declare\221\237\304code")
MP_MATCH_COMPRESSED("can't delete expression", "\377\203delete\243")
MP_MATCH_COMPRESSED("can't import name %q", "\377\203\267\216\330")
MP_MATCH_COMPRESSED("can't perform relative import", "\377\203perform relative\267")
MP_MATCH_COMPRESSED("can't send non-None value to a just-started generator", "\377\203send non-None\306\231\247just-started\212")
MP_MATCH_COMPRESSED("chr() arg not in range(256)", "\377chr()\210\204\237range(256)")
MP_MATCH_COMPRESSED("decimal numbers not supported", "\377decimal numbers\204\206")
MP_MATCH_COMPRESSED("default 'except' must be last", "\377\260\334\205\217last")
MP_MATCH_COMPRESSED("dict update sequence has wrong length", "\377dict update\256\263\223\271")
MP_MATCH_COMPRESSED("divide by zero", "\377divide\373\315")
MP_MATCH_COMPRESSED("empty separator", "\377\235separator")
MP_MATCH_COMPRESSED("exceptions must derive from BaseException", "\377exceptions\205derive\310\344")
MP_MATCH_COMPRESSED("expected tuple/list", "\377expected\245")
MP_MATCH_COMPRESSED("function got multiple values for argument '%q'", "\377\201got\220\275\225\200\307")
MP_MATCH_COMPRESSED("function missing keyword-only argument", "\377\201\227keyword-only\200")
MP_MATCH_COMPRESSED("function missing required keyword argument '%q'", "\377\201\227\222\211\200\307")
MP_MATCH_COMPRESSED("function missing required positional argument #%d", "\377\201\227\222\214\200\327")
MP_MATCH_COMPRESSED("generator already executing", "\377\212\356executing")
MP_MATCH_COMPRESSED("generator ignored GeneratorExit", "\377\212ignored\345")
MP_MATCH_COMPRESSED("generator raised StopIteration", "\377\212raised\350")
MP_MATCH_COMPRESSED("identifier redefined as global", "\377\244\251\323global")
MP_MATCH_COMPRESSED("identifier redefined as nonlocal", "\377\244\251\323\221")
MP_MATCH_COMPRESSED("index out of range", "\377\302\266\215\241")
MP_MATCH_COMPRESSED("indices must be integers", "\377\264\205\217integers")
MP_MATCH_COMPRESSED("int() arg 2 must be >= 2 and <= 36", "\377int()\210\316\205\217\343\316\357\342\341")
MP_MATCH_COMPRESSED("invalid micropython decorator", "\377\226micropython decorator")
MP_MATCH_COMPRESSED("invalid syntax", "\377\226\274")
MP_MATCH_COMPRESSED("invalid syntax for integer", "\377\226\274\225integer")
MP_MATCH_COMPRESSED("issubclass() arg 1 must be a class", "\377\233\210\326\205\217\247\301")
MP_MATCH_COMPRESSED("issubclass() arg 2 must be a class or a tuple of classes", "\377\233\210\316\205\217\247\301\325\247\305\215classes")
MP_MATCH_COMPRESSED("join expects a list of str/bytes objects consistent with self object", "\377join\261\247\312\215str/bytes objects consistent\252\314\202")
MP_MATCH_COMPRESSED("local variable referenced before assignment", "\377local variable referenced\367\207")
MP_MATCH_COMPRESSED("long int not supported in this build", "\377\313\265\204\206\237this\372")
MP_MATCH_COMPRESSED("memory allocation failed, allocating %u bytes", "\377\272\242\262\355\331\300")
MP_MATCH_COMPRESSED("memory allocation failed, heap is locked", "\377\272\242\262heap\324locked")
MP_MATCH_COMPRESSED("module not found", "\377module\204\236")
MP_MATCH_COMPRESSED("multiple *x in assignment", "\377\220\322\237\207")
MP_MATCH_COMPRESSED("multiple bases have instance lay-out conflict", "\377\220\366have\253lay-out conflict")
MP_MATCH_COMPRESSED("must use keyword argument for key function", "\377\205use\211\200\225key\201")
MP_MATCH_COMPRESSED("name not defined", "\377\216\204defined")
MP_MATCH_COMPRESSED("name too long", "\377\216\320\313")
MP_MATCH_COMPRESSED("negative power with no float support", "\377\254power\252\240float\230")
MP_MATCH_COMPRESSED("negative shift count", "\377\254shift count")
MP_MATCH_COMPRESSED("no active exception to reraise", "\377\240\354exception\231reraise")
MP_MATCH_COMPRESSED("no binding for nonlocal found", "\377\240\370\225\221\236")
MP_MATCH_COMPRESSED("no such attribute", "\377\240such\363")
MP_MATCH_COMPRESSED("non-default argument follows default argument", "\377non-default\200follows\260\200")
MP_MATCH_COMPRESSED("object doesn't support item assignment", "\377\202\224\230\311\207")
MP_MATCH_COMPRESSED("object doesn't support item deletion", "\377\202\224\230\311deletion")
MP_MATCH_COMPRESSED("object has no len", "\377\202\263\240len")
MP_MATCH_COMPRESSED("object isn't subscriptable", "\377\202\303subscriptable")
MP_MATCH_COMPRESSED("object not an iterator", "\377\202\204\276iterator")
MP_MATCH_COMPRESSED("object not callable", "\377\202\204\375")
MP_MATCH_COMPRESSED("object not in sequence", "\377\202\204\237\256")
MP_MATCH_COMPRESSED("object not iterable", "\377\202\204iterable")
MP_MATCH_COMPRESSED("object with buffer protocol required", "\377\202\252\371protocol\222")
MP_MATCH_COMPRESSED("opcode", "opcode")
MP_MATCH_COMPRESSED("ord expects a character", "\377ord\261\247\377")
MP_MATCH_COMPRESSED("pop from empty list", "\377pop\310\235\312")
MP_MATCH_COMPRESSED("popitem(): dictionary is empty", "\377popitem(): dictionary\324\235")
MP_MATCH_COMPRESSED("positional arg after **", "\377\214\210\234\321")
MP_MATCH_COMPRESSED("positional arg after keyword arg", "\377\214\210\234\211\210")
MP_MATCH_COMPRESSED("rsplit(None,n)", "rsplit(None,n)")
MP_MATCH_COMPRESSED("small int overflow", "\377small\265\255")
MP_MATCH_COMPRESSED("start/end indices", "\377start/end\264")
MP_MATCH_COMPRESSED("stream operation not supported", "\377stream operation\204\206")
MP_MATCH_COMPRESSED("substring not found", "\377substring\204\236")
MP_MATCH_COMPRESSED("super() can't find self", "\377super()\203find\314")
MP_MATCH_COMPRESSED("too many args", "\377\320many\361")
MP_MATCH_COMPRESSED("tuple index out of range", "\377\305\302\266\215\241")
MP_MATCH_COMPRESSED("tuple/list has wrong length", "\377\245\263\223\271")
MP_MATCH_COMPRESSED("type isn't an acceptable base type", "\377\232\303\276\353\365\232")
MP_MATCH_COMPRESSED("type takes 1 or 3 arguments", "\377\232takes\326\325\337\250")
MP_MATCH_COMPRESSED("unexpected indent", "\377\246\270")
MP_MATCH_COMPRESSED("unexpected keyword argument", "\377\246\211\200")
MP_MATCH_COMPRESSED("unicode name escapes", "\377unicode\216escapes")
MP_MATCH_COMPRESSED("unindent doesn't match any outer indent level", "\377unindent\224match\360\304\270level")
MP_MATCH_COMPRESSED("unsupported type for operator", "\377unsupported\232\225operator")
MP_MATCH_COMPRESSED("wrong number of arguments", "\377\223\273\215\250")
MP_MATCH_COMPRESSED("wrong number of values to unpack", "\377\223\273\215\275\231unpack")
MP_MATCH_COMPRESSED("zero step", "\377\315step")
// Total input length:      2924
// Total compressed length: 1262
// Total data length:       1120
// Predicted saving:        542

// gzip length:             1796
// Percentage of gzip:      132.6%
// zlib length:             1784
// Percentage of zlib:      133.5%
